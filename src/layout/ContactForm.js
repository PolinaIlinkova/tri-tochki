import React, { useState } from 'react';
import styles from './ContactForm.module.css';
import PhoneInputField from '../components/UI/PhoneInputField';

const TOKEN = '8452053897:AAElF_nbUIaJS1f8Oz57mAWj-YFi4bzuvEI';
const CHAT_ID = '-4937510618';

function ContactForm() {
  const [submitted, setSubmitted] = useState(false);
  const [phone, setPhone] = useState("");
  const [country, setCountry] = useState("by");

  const validatePhone = () => {
    const digits = phone.replace(/\D/g, "");

    if (country === "by") {
      // –ë–µ–ª–∞—Ä—É—Å—å: –∫–æ–¥ +375 (4 —Å–∏–º–≤–æ–ª–∞), –¥–∞–ª—å—à–µ 9 —Ü–∏—Ñ—Ä ‚Üí –≤—Å–µ–≥–æ 12‚Äì13 —Å–∏–º–≤–æ–ª–æ–≤
      return digits.length === 12 && digits.startsWith("375");
    }

    if (country === "ru") {
      // –†–æ—Å—Å–∏—è: –∫–æ–¥ +7 (1 —Å–∏–º–≤–æ–ª), –¥–∞–ª—å—à–µ 10 —Ü–∏—Ñ—Ä ‚Üí –≤—Å–µ–≥–æ 11 —Å–∏–º–≤–æ–ª–æ–≤
      return digits.length === 11 && digits.startsWith("7");
    }

    // –±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω: —Ö–æ—Ç—è –±—ã 10 —Ü–∏—Ñ—Ä
    return digits.length >= 10;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!validatePhone()) {
      alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞");
      return;
    }

    const formData = new FormData(e.target);
    const data = Object.fromEntries(formData.entries());

    const text = `
üì© –ó–∞—è–≤–∫–∞ –∏–∑ —Ñ–æ—Ä–º—ã "–≤–æ–ø—Ä–æ—Å":
üë§ –ò–º—è: ${data.name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${data.message || '-'}
    `;

    try {
      const response = await fetch(
        `https://api.telegram.org/bot${TOKEN}/sendMessage`,
        {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            chat_id: CHAT_ID,
            text,
            parse_mode: 'HTML',
          }),
        }
      );

      const result = await response.json();

      if (result.ok) {
        setSubmitted(true);
      } else {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram');
      }
    } catch (err) {
      console.error(err);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã');
    }
  };

  return (
    <div className={styles.contactForm}>
      {submitted ? (
        <div className={styles.thankYou}>
          <h3>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É!</h3>
          <p>–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
        </div>
      ) : (
        <>
          <h3>–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?</h3>
          <p>–ó–∞–∫–∞–∂–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫ –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –¥–∏–∑–∞–π–Ω-–ø—Ä–æ–µ–∫—Ç—É –∏ –ø—Ä–∏–Ω—Ü–∏–ø—É —Ä–∞–±–æ—Ç—ã —Å—Ç—É–¥–∏–∏</p>
          <form onSubmit={handleSubmit} className={styles.form}>
            <input type="text" name="name" placeholder="–í–∞—à–µ –∏–º—è" required />
            <PhoneInputField value={phone} onChange={setPhone} onCountryChange={setCountry}/>
            <textarea
              name="message"
              placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
              rows="3"
            />
            <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
          </form>
        </>
      )}
    </div>
  );
}

export default ContactForm;